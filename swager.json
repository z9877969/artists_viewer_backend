{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "WaterTraker API docs",
    "description": "API documentation for GoIT project 'Water Traker'. [Backend github repository](https://github.com/z9877969/water_traker_backend)",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://sound-wave.b.goit.study/api"
    },
    {
      "url": "http://localhost:4040/api/"
    }
  ],
  "tags": [
    {
      "name": "Genre",
      "description": "Genres endpoints"
    },
    {
      "name": "Artist",
      "description": "Artists endpoints"
    },
    {
      "name": "Feedback",
      "description": "Feedbacks endpoints"
    }
  ],
  "paths": {
    "/genres": {
      "get": {
        "tags": [
          "Genre"
        ],
        "summary": "Genres of artists music",
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenresResponse"
                }
              }
            }
          }
        }
      }
    },
    "/artists": {
      "get": {
        "tags": [
          "Artist"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "min": 3,
              "max": 25,
              "default": 10
            },
            "description": "Number of returned artists in list"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "min": 1,
              "default": 1
            },
            "description": "Number of artists in returned data relative to limit parameter"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "description": "Value for search artists by name"
          },
          {
            "in": "query",
            "name": "sortName",
            "schema": {
              "type": "string",
              "enum": [
                "abs",
                "desc"
              ]
            },
            "description": "Value for sort artists by order abs: a -> z, desc: z -> a"
          },
          {
            "in": "query",
            "name": "sortName",
            "schema": {
              "type": "string"
            },
            "description": "Genre of artists music"
          }
        ],
        "summary": "Artists list by search params",
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request params)",
            "content": {}
          }
        }
      }
    },
    "/artists/{id}": {
      "get": {
        "tags": [
          "Artist"
        ],
        "summary": "One artist info",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Artist id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistByIdResponse"
                }
              }
            }
          },
          "404": {
            "description": "Artist not found",
            "content": {}
          }
        }
      }
    },
    "/feedbacks": {
      "post": {
        "tags": [
          "Feedback"
        ],
        "summary": "Feedbacks list of user`s",
        "requestBody": {
          "description": "Feedback`s data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddFeedbackRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddFeedbackResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      },
      "get": {
        "tags": [
          "Feedback"
        ],
        "summary": "Feedbacks list",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "min": 3,
              "max": 25,
              "default": 10
            },
            "description": "Number of returned feedbacks in list"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "min": 1,
              "default": 1
            },
            "description": "Number of feedbacks in returned data relative to limit parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFeedbacksResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request params)",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "$ref": "#/components/examples/auth/email"
          },
          "password": {
            "$ref": "#/components/examples/auth/password"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "apiKey": {
            "$ref": "#/components/examples/auth/apiKey"
          }
        }
      },
      "LoginRequest": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "$ref": "#/components/examples/auth/email"
          },
          "password": {
            "$ref": "#/components/examples/auth/password"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "apiKey": {
            "$ref": "#/components/examples/auth/apiKey"
          }
        }
      },
      "GenresResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "$ref": "#/components/examples/genres/_id"
            },
            "genre": {
              "$ref": "#/components/examples/genres/genre"
            }
          }
        }
      },
      "ArtistsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "$ref": "#/components/examples/artists/_id"
            },
            "genres": {
              "$ref": "#/components/examples/artists/genres"
            },
            "strArtist": {
              "$ref": "#/components/examples/artists/strArtist"
            },
            "strBiographyEN": {
              "$ref": "#/components/examples/artists/strBiographyEN"
            },
            "strArtistThumb": {
              "$ref": "#/components/examples/artists/strArtistThumb"
            }
          }
        }
      },
      "ArtistByIdResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/examples/artists/_id"
          },
          "strArtistThumb": {
            "$ref": "#/components/examples/artists/strArtistThumb"
          },
          "strArtist": {
            "$ref": "#/components/examples/artists/strArtist"
          },
          "strLabel": {
            "$ref": "#/components/examples/artists/strLabel"
          },
          "intFormedYear": {
            "$ref": "#/components/examples/artists/intFormedYear"
          },
          "genres": {
            "$ref": "#/components/examples/artists/genres"
          },
          "strGender": {
            "$ref": "#/components/examples/artists/strGender"
          },
          "intMembers": {
            "$ref": "#/components/examples/artists/intMembers"
          },
          "strCountry": {
            "$ref": "#/components/examples/artists/strCountry"
          },
          "strBiographyEN": {
            "$ref": "#/components/examples/artists/strBiographyEN"
          },
          "tracksList": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "$ref": "#/components/examples/tracks/_id"
                },
                "strTrack": {
                  "$ref": "#/components/examples/tracks/strTrack"
                },
                "strAlbum": {
                  "$ref": "#/components/examples/tracks/strAlbum"
                },
                "strArtist": {
                  "$ref": "#/components/examples/tracks/strArtist"
                },
                "intDuration": {
                  "$ref": "#/components/examples/tracks/intDuration"
                },
                "movie": {
                  "$ref": "#/components/examples/tracks/movie"
                }
              }
            }
          }
        }
      },
      "AddFeedbackRequest": {
        "type": "object",
        "required": [
          "name",
          "rating",
          "descr"
        ],
        "properties": {
          "name": {
            "$ref": "#/components/examples/feedbacks/name"
          },
          "rating": {
            "$ref": "#/components/examples/feedbacks/rating"
          },
          "descr": {
            "$ref": "#/components/examples/feedbacks/descr"
          }
        }
      },
      "AddFeedbackResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/examples/feedbacks/_id"
          },
          "name": {
            "$ref": "#/components/examples/feedbacks/name"
          },
          "rating": {
            "$ref": "#/components/examples/feedbacks/rating"
          },
          "descr": {
            "$ref": "#/components/examples/feedbacks/descr"
          }
        }
      },
      "GetFeedbacksResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AddFeedbackResponse"
        }
      }
    },
    "examples": {
      "auth": {
        "email": {
          "type": "string",
          "description": "User's email",
          "format": "email",
          "maxLength": 128
        },
        "password": {
          "type": "string",
          "description": "User's password",
          "example": "qwer1234",
          "minLength": 8,
          "maxLength": 64
        },
        "apiKey": {
          "type": "string",
          "description": "User`s apiKey for requests to DB",
          "example": "7a7d345d-774e-43f7-8051-a83f0f40302c"
        }
      },
      "genres": {
        "_id": {
          "type": "string",
          "example": "506f1f77bcf86cd799439013"
        },
        "genre": {
          "type": "string",
          "example": "Rock"
        }
      },
      "artists": {
        "_id": {
          "type": "string",
          "example": "65ada227af9f6d155db46908"
        },
        "strArtist": {
          "type": "string",
          "description": "Artist name",
          "example": "U2"
        },
        "intFormedYear": {
          "type": "string",
          "description": "Year when artist formed",
          "example": "1976"
        },
        "strLabel": {
          "type": "string",
          "description": "Place where artist created",
          "example": "Island"
        },
        "genres": {
          "type": "array",
          "description": "Artist genres list",
          "example": [
            "Rock",
            "Rock/Pop"
          ]
        },
        "strBiographyEN": {
          "type": "string",
          "description": "Artist biografy description",
          "example": "U2 are an Irish rock band from Dublin, formed in 1976. The group consists of Bono (lead vocals and rhythm guitar)..."
        },
        "strArtistThumb": {
          "type": "string",
          "description": "Artist image url",
          "example": "https://ftp.goit.study/img/musicbox/artist/strArtistThumb_qvuxvs1347997318.jpg"
        },
        "strCountry": {
          "type": "string",
          "description": "Place where artist lived",
          "example": "Dublin, Ireland"
        },
        "intMembers": {
          "type": "string",
          "description": "The number of musicians in the group",
          "example": "4"
        },
        "strGender": {
          "type": "string",
          "description": "The gender of musicians in the group",
          "example": "Male"
        }
      },
      "tracks": {
        "_id": {
          "type": "string",
          "example": "65ada232af9f6d155db46975"
        },
        "strTrack": {
          "type": "string",
          "example": "Two Hearts Beat as One"
        },
        "strAlbum": {
          "type": "string",
          "example": "Children of the Revolution"
        },
        "strArtist": {
          "type": "string",
          "example": "U2"
        },
        "intDuration": {
          "type": "string",
          "example": "218400"
        },
        "movie": {
          "type": "string",
          "example": "https://www.youtube.com/watch?v=8Iaz-wtKYpo or null"
        }
      },
      "feedbacks": {
        "_id": {
          "type": "string",
          "example": "506f1f77bcf86ba129439542"
        },
        "name": {
          "type": "string",
          "minLength": 2,
          "maxLength": 16,
          "example": "506f1f77bcf86ba129439542",
          "description": "Name of user who send feedback"
        },
        "rating": {
          "type": "number",
          "min": 1,
          "max": 5,
          "example": 4.5,
          "description": "Rating value"
        },
        "descr": {
          "type": "string",
          "minLength": 10,
          "maxLength": 512,
          "example": "Some text with user`s comment about application",
          "description": "Some text with user`s comment about application"
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}